using System.Collections.Generic;
using System.Linq;

namespace ProjectEuler.Problems
{
    public class Problem044 : Problem<int>
    {
        // Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
        // 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
        // It can be seen that P4 + P7 = 22 + 70 = 92 = P8.However, their difference, 70 − 22 = 48, is not pentagonal.
        // Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = | Pk − Pj| is minimised; what is the value of D?

        public override int Run()
        {
            var set = new HashSet<int>();

            for (int i = 1; i <= 5000; i++)
            {
                set.Add(GetPentagonal(i));
            }

            var list = set.ToList();

            for (int i = 1; i < list.Count - 1; i++)
            {
                for (int j = i + 1; j < list.Count; j++)
                {
                    if (set.Contains(list[j] + list[i])
                        && set.Contains(list[j] - list[i]))
                    {
                        return list[j] - list[i];
                    }
                }
            }

            return 0;
        }

        private static int GetPentagonal(int n)
        {
            return n * (3 * n - 1) / 2;
        }
    }
}